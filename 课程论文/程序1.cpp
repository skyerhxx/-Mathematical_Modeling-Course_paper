#include <iostream>
#include <vector>
#include <utility>
#include <queue>
#include <functional>
#include <algorithm>
#include <cstdio>
using namespace std;
const int maxn = 1010 + 20;
const int INF = 9999999;
int V, E;
int Prev[maxn];            //最短路上的前驱顶点
int d[maxn];
int a[100][100];      //i->j 上的权值
int a1[100][100];
int used[maxn];

//求从起点s出发到各个顶点的最短距离
void dijkstra(int s);

//从s点出发到各个顶点的最短距离
void dijkstra(int s)
{
    fill(d, d + V, INF);
    fill(used, used + V, false);
    fill(Prev, Prev + V, -1);
    d[s] = 0;

    while (true) {
        int v = -1;
        for (int u = 0; u < V; u++) {
            if (!used[u] && (v == -1 || d[u] < d[v]))
                v = u;  //找出到下一条尝试的顶点中距离最短的点
        }

        if (v == -1) break;
        used[v] = true;
        for (int u = 0; u < V; u++) {
            if (d[u] > d[v] + a[v][u]) {
                d[u] = d[v] + a[v][u];  //从v到各个临边u中最短的路-->存放到d[u]，用于下一次计算
                Prev[u] = v;               //u的前驱是v
            }
        }
    }
}
int main()
{
    for(int i=0;i<50;i++)
        for(int j=0;j<50;j++)
          if(i==j)
             a[i][j] = 0;
          else
             a[i][j] = INF;
    a[0][1]=400;a[0][2]=450;a[1][3]=300;a[1][20]=230;a[1][46]=140;a[2][3]=600;
    a[3][4]=210;a[3][18]=310;a[4][5]=230;a[4][6]=200;a[5][6]=320;a[5][7]=340;
    a[6][7]=170;a[6][17]=160;a[7][8]=200;a[7][14]=285;a[8][9]=180;a[9][10]=150;
    a[9][14]=160;a[10][11]=140;a[10][13]=130;a[11][12]=200;a[12][33]=400;
    a[13][14]=190;a[13][25]=190;a[14][15]=170;a[14][16]=250;a[15][16]=140;
    a[15][17]=130;a[16][26]=240;a[17][18]=204;a[17][24]=180;a[18][19]=140;
    a[18][23]=175;a[19][20]=180;a[19][23]=190;a[20][21]=300;a[20][22]=270;
    a[20][46]=350;a[21][43]=160;a[21][44]=270;a[21][47]=180;a[22][23]=240;
    a[22][28]=210;a[22][29]=290;a[22][43]=150;a[23][27]=130;a[23][24]=170;
    a[25][26]=140;a[25][33]=320;a[26][27]=190;a[27][28]=260;a[28][30]=190;
    a[29][30]=240;a[29][41]=130;a[29][42]=210;a[30][31]=230;a[30][35]=260;
    a[30][49]=210;a[31][32]=190;a[31][34]=140;a[31][35]=240;a[34][36]=160;
    a[35][38]=180;a[35][39]=190;a[36][37]=135;a[37][38]=130;a[38][40]=310;
    a[39][40]=140;a[39][49]=190;a[41][49]=200;a[42][43]=260;a[42][44]=210;
    a[32][33]=210;a[44][45]=240;a[45][47]=280;a[47][48]=200;

    for(int i=0;i<50;i++)
        for(int j=0;j<50;j++)
            if(a[i][j]!=0 && a[i][j]!=INF)
                a[j][i]=a[i][j];

    V=50,E=77;

    for(int i=0;i<50;i++)
    {
       dijkstra(i);
       for(int j=0;j<50;j++)
       {
          a1[i][j]=d[j];
       }
    }

    for(int i=0;i<50;i++)
    {
       for(int j=0;j<50;j++)
          cout<<a1[i][j]<<' ';
       cout << endl;
    }
    return 0;
}
